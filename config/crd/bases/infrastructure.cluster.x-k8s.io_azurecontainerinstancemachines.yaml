
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: azurecontainerinstancemachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureContainerInstanceMachine
    listKind: AzureContainerInstanceMachineList
    plural: azurecontainerinstancemachines
    shortNames:
    - acim
    singular: azurecontainerinstancemachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: AzureContainerInstanceMachine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: AzureContainerInstanceMachine provisioning state
      jsonPath: .status.vmState
      name: State
      type: string
    - description: Cluster to which this AzureContainerInstanceMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: Machine object to which this AzureContainerInstanceMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureContainerInstanceMachine is the Schema for the azurecontainerinstancemachines
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureContainerInstanceMachineSpec defines the desired state
              of AzureContainerInstanceMachine
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an
                  instance, in addition to the ones added by default by the Azure
                  provider. If both the AzureCluster and the AzureMachine specify
                  the same tag name with different values, the AzureMachine's value
                  takes precedence.
                type: object
              allocatePublicIP:
                description: AllocatePublicIP allows the ability to create dynamic
                  public ips for machines where this value is true.
                type: boolean
              identity:
                default: None
                description: Identity is the type of identity used for the virtual
                  machine. The type 'SystemAssigned' is an implicitly created identity.
                  The generated identity will be assigned a Subscription contributor
                  role. The type 'UserAssigned' is a standalone Azure resource provided
                  by the user and assigned to the VM
                enum:
                - None
                - SystemAssigned
                - UserAssigned
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              userAssignedIdentities:
                description: UserAssignedIdentities is a list of standalone Azure
                  identities provided by the user The lifecycle of a user-assigned
                  identity is managed separately from the lifecycle of the AzureMachine.
                  See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                items:
                  description: UserAssignedIdentity defines the user-assigned identities
                    provided by the user to be assigned to Azure resources.
                  properties:
                    providerID:
                      description: 'ProviderID is the identification ID of the user-assigned
                        Identity, the format of an identity is: ''azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'''
                      type: string
                  required:
                  - providerID
                  type: object
                type: array
            type: object
          status:
            description: AzureContainerInstanceMachineStatus defines the observed
              state of AzureContainerInstanceMachine
            properties:
              addresses:
                description: Addresses contains the Azure instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the AzureMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "ErrorMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "ErrorReason will be set in the event that there is a
                  terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmState:
                description: VMState is the provisioning state of the Azure virtual
                  machine.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
